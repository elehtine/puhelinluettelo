{"version":3,"sources":["services/persons.js","components/Persons.js","components/PersonForm.js","components/Filter.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","personObject","post","id","delete","put","Person","person","remove","name","number","onClick","Persons","showedPersons","map","key","PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Filter","searchName","handleSearchName","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewNumber","setSearchName","setMessage","useEffect","personService","filter","toLowerCase","includes","event","target","preventDefault","personObj","found","forEach","window","confirm","setTimeout","catch","error","returnedPerson","concat","find","p","result","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e08d0b8.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response =>response.data)\n}\n\nconst create = (personObject) => {\n  const request = axios.post(baseUrl, personObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, personObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, personObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAll,\n  create,\n  remove,\n  update\n}\n","import React from 'react'\n\nconst Person = ({ person, remove }) => {\n  return (\n    <p>\n      {person.name} {person.number} <button \n        onClick={() => remove(person.id)}\n      >delete</button>\n    </p>\n  )\n}\n\nconst Persons = ({ showedPersons, remove }) => {\n  return (\n    <div>\n      {showedPersons.map(person =>\n        <Person\n          key={person.name}\n          person={person} \n          remove={remove}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default Persons\n","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n    <div>\n      <form onSubmit={props.addPerson}>\n        <div>\n          name: <input\n            value={props.newName}\n            onChange={props.handleNameChange}\n          />\n        </div>\n        <div>\n          number: <input \n            value={props.newNumber}\n            onChange={props.handleNumberChange}\n          />\n        </div>\n        <div><button type=\"submit\">add</button></div>\n      </form>\n    </div>\n  )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Filter = ({ searchName, handleSearchName }) => {\n  return (\n    <div>\n      filter shown with<input\n        value={searchName}\n        onChange={handleSearchName}\n      />\n    </div>\n  )\n}\n\nexport default Filter\n","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\n\nconst Notification = ({ message, className }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={className}>{message}</div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchName, setSearchName ] = useState('')\n  const [ message, setMessage ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then((response) => {\n        setPersons(response)\n      })\n  },[])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const personObj = {\n      name: newName,\n      number: newNumber\n    }\n    let found = false\n    persons.forEach(person => {\n      if (person.name === newName) {\n        found = true\n        personObj.id = person.id\n      }\n    })\n\n    if (found) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        personService\n          .update(personObj.id, personObj)\n          .then(response => {\n            setPersons(persons.map(person => \n              person.id !== personObj.id ? person : personObj\n            ))\n            setNewName('')\n            setNewNumber('')\n            setMessage(`Number of ${personObj.name} is changed`)\n            setTimeout(() => {\n              setMessage(null)\n            }, 2000)\n          })\n          .catch(error => {\n            setMessage(`Person ${personObj.name} is not in phonebook`)\n            setPersons(persons.filter(person => person.id !== personObj.id))\n            setTimeout(() => {\n              setMessage(null)\n            }, 2000)\n          })\n      }\n      return\n    }\n\n    personService\n      .create(personObj)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setMessage(`Person ${personObj.name} added`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 2000)\n      })\n  }\n\n  const removePerson = (id) => {\n    if (window.confirm(`Delete ${persons.find(p => p.id === id).name}?`)) {\n      personService\n        .remove(id)\n        .then(result => {\n          if (result) {\n            setPersons(persons.filter(person => {\n              if (person.id !== id) {\n                return true\n              }\n              setMessage(`Person ${person.name} is deleted`)\n              setTimeout(() => {\n                setMessage(null)\n              }, 2000)\n              return false\n            }))\n          }\n        })\n    }\n  }\n\n  const showedPersons = persons.filter(person => \n    person.name.toLowerCase().includes(searchName.toLowerCase()))\n\n  const handleSearchName = (event) => {\n    setSearchName(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification \n        message={message} \n        className='success'\n      />\n      <Filter searchName={searchName} handleSearchName={handleSearchName} />\n      <h2>add a new</h2>\n      <PersonForm \n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons \n        showedPersons={showedPersons}\n        remove={removePerson}\n      />\n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}